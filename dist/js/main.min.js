!function() {
	window;
	const e = document.documentElement;
	if (e.classList.remove("no-js"), e.classList.add("js"), document.body.classList.contains("has-animations")) {
		(window.sr = ScrollReveal()).reveal(".feature, .pricing-table-inner", {
			duration: 600,
			distance: "20px",
			easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
			origin: "bottom",
			interval: 100
		}), e.classList.add("anime-ready"), anime.timeline({
			targets: ".hero-figure-box-05"
		}).add({
			duration: 400,
			easing: "easeInOutExpo",
			scaleX: [.05, .05],
			scaleY: [0, 1],
			perspective: "500px",
			delay: anime.random(0, 400)
		}).add({
			duration: 400,
			easing: "easeInOutExpo",
			scaleX: 1
		}).add({
			duration: 800,
			rotateY: "-15deg",
			rotateX: "8deg",
			rotateZ: "-1deg"
		}), anime.timeline({
			targets: ".hero-figure-box-06, .hero-figure-box-07"
		}).add({
			duration: 400,
			easing: "easeInOutExpo",
			scaleX: [.05, .05],
			scaleY: [0, 1],
			perspective: "500px",
			delay: anime.random(0, 400)
		}).add({
			duration: 400,
			easing: "easeInOutExpo",
			scaleX: 1
		}).add({
			duration: 800,
			rotateZ: "20deg"
		}), anime({
			targets: ".hero-figure-box-01, .hero-figure-box-02, .hero-figure-box-03, .hero-figure-box-04, .hero-figure-box-08, .hero-figure-box-09, .hero-figure-box-10",
			duration: anime.random(600, 800),
			delay: anime.random(600, 800),
			rotate: [anime.random(-360, 360), function(e) {
				return e.getAttribute("data-rotation")
			}],
			scale: [.7, 1],
			opacity: [0, 1],
			easing: "easeInOutExpo"
		})
	}
}();

document.querySelector('#nik').addEventListener('paste',pasteTest);
function pasteTest(event){
    window.setTimeout(() => {
        var characters =event.target.value;
        window.setTimeout(() => {
            if(!(/^\d+$/.test(characters))){
                event.target.value = event.target.value.replace(/\D/g, '');
            }
        });
    });
}

$('#submit').click(function() {
    var nik     = $('#nik').val();
    var role    = $('#role').val();
    var pwd     = $('#pwd').val();

    if(nik.length < 16){
        swal("Oops!", "NIK kurang dari 16 character", "error");
        return false;
    }else if(nik.length > 16){
        swal("Oops!", "NIK melebihi dari 16 character", "error");
        return false;
    }else if(!role){
        swal("Oops!", "Role tidak boleh kosong", "error");
        return false;
    }else if(!pwd){
        swal("Oops!", "Password tidak boleh kosong", "error");
        return false;
    }else{
        $('#loader').removeClass('hidden');
        setTimeout(function() { sendjwt(); }, 2000);
    }
    // $('#loader').removeClass('hidden');
    // setTimeout(function() { sendjwt(); }, 2000);
});

var getUrl = window.location;
var baseUrl = getUrl .protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];

function sendjwt(){
    var nik     = $('#nik').val();
    var role    = $('#role').val();
    var pwd     = md5($('#pwd').val());

    $.ajax({
        type: 'POST',
        dataType: 'json',
        url: baseUrl+ '/src/php/output.php/createjwt',
        data :  {
                    nik     : nik,
                    role    : role,
                    pwd     : pwd,
                },
        success: function(result){
            $('#loader').addClass('hidden')
            console.log(result);

            $('#nik').val('');
            $('#role').val('');
            $('#pwd').val('');

            if(result.status == 1){

                $('#result').empty();
                $('#result').css('display','block');
                $('#result').append("<p style='word-break: break-all !important'>Result Authenticate APP<br>ID = "+result.id+"<br>NIK = "+result.nik+"<br>Role = "+result.role+"<br>Token JWT "+result.jwt+"</p>");
                $('#result').append("<p style='word-break: break-all !important' id='result_fetch_app'></p>");

                currency();
            }else{
                $('#result').empty();
                swal("Oops!", "Invalid JWT", "error");
                $('#result').css('display','none');

            }
        },
        error: function(xhr) {
            $('#loader').addClass('hidden');
            swal("Oops!", "Invalid JWT", "error");
        }
    });
}

function currency(){
    $('#loader').removeClass('hidden');

    $.ajax({
        type: 'POST',
        dataType: 'json',
        url: baseUrl+ '/src/php/output.php/fetch_app',
        data :  {
                    jumlah     : null
                },
        success: function(result){
            $('#loader').addClass('hidden');

            if(result){

                $('#result_fetch_app').empty();
                $('#result_fetch_app').css('display','block');
                $('#result_fetch_app').append(
                                            "FETCH APP <br>"+
                                            "ID = "+result.id+"<br>"+
                                            "Department = "+result.department+"<br>"+
                                            "Product = "+result.product+"<br>"+
                                            "Price (USD) = "+thousands_separators(result.price)+"<br>"+
                                            "Currency (IDR) = "+thousands_separators(result.idr)+"<br>"
                                            );
            }else{
                swal("Oops!", "Invalid JWT", "error");
                $('#result_fetch_app').empty();
                $('#result_fetch_app').css('display','none');
            }
        },
        error: function(xhr) {
            $('#loader').addClass('hidden');
            swal("Oops!", "Invalid JWT", "error");
        }
    });
}

function thousands_separators(nStr){
    var num_parts = nStr.toString().split(".");
    num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ".");
	// console.log(num_parts.join("."));
    // return num_parts.join(".");

	nStr 		+= '';
    var x 		= nStr.split('.');
    var x1 		= x[0];
    x1 			= x1.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
	// var hasil1 	= x1.join(",");

    var x2 		= x.length > 1 ? ',' + x[1] : '';
    var rgx 	= /(\d+)(\d{3})/;
    // while (rgx.test(x1)) {
    //         x1 = x1.replace(rgx, '$1' + ',' + '$2');
    // }

    var hasil 	= x1 + x2; 
	// .replace(/,/g,'')
	return hasil;
}